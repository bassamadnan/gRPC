// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: pkg/proto/rideshare.proto

package rspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RideStatusResponse_Status int32

const (
	RideStatusResponse_PENDING              RideStatusResponse_Status = 0 // request has gone to the driver, he has not pressed y/n yet.
	RideStatusResponse_IN_PROGRESS          RideStatusResponse_Status = 1 // driver accepted, ongoing ride
	RideStatusResponse_NO_DRIVERS_AVAILABLE RideStatusResponse_Status = 2 // all denied, or all occupied
)

// Enum value maps for RideStatusResponse_Status.
var (
	RideStatusResponse_Status_name = map[int32]string{
		0: "PENDING",
		1: "IN_PROGRESS",
		2: "NO_DRIVERS_AVAILABLE",
	}
	RideStatusResponse_Status_value = map[string]int32{
		"PENDING":              0,
		"IN_PROGRESS":          1,
		"NO_DRIVERS_AVAILABLE": 2,
	}
)

func (x RideStatusResponse_Status) Enum() *RideStatusResponse_Status {
	p := new(RideStatusResponse_Status)
	*p = x
	return p
}

func (x RideStatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RideStatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_rideshare_proto_enumTypes[0].Descriptor()
}

func (RideStatusResponse_Status) Type() protoreflect.EnumType {
	return &file_pkg_proto_rideshare_proto_enumTypes[0]
}

func (x RideStatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RideStatusResponse_Status.Descriptor instead.
func (RideStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{2, 0}
}

type RideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pickup      string `protobuf:"bytes,1,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	RiderId     string `protobuf:"bytes,3,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
}

func (x *RideRequest) Reset() {
	*x = RideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideRequest) ProtoMessage() {}

func (x *RideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideRequest.ProtoReflect.Descriptor instead.
func (*RideRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{0}
}

func (x *RideRequest) GetPickup() string {
	if x != nil {
		return x.Pickup
	}
	return ""
}

func (x *RideRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *RideRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

// server will check if it has tuple (rider_id, driver_id, status)
// when rider client sends a request initially, the driver_id is -1, and status is set to pending (since we are waiting for drivers to accept)
// when a driver accepts via the accept ride service, the stratus is set to in progress, so the get ride status will now return the same
// when complete ride service has been called by driver, the status is set to completed
// if a driver did not get accepted due to rejectride service, keep the driver_id as -1 and ask next driver connected to server
type RideStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId string `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
}

func (x *RideStatusRequest) Reset() {
	*x = RideStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusRequest) ProtoMessage() {}

func (x *RideStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusRequest.ProtoReflect.Descriptor instead.
func (*RideStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{1}
}

func (x *RideStatusRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

// after accepting, assume ride starts instantly and goes on for 5 seconds (random) or maybe at this as input
type RideStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   RideStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=myuber.RideStatusResponse_Status" json:"status,omitempty"`
	RiderId  string                    `protobuf:"bytes,2,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	DriverId string                    `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *RideStatusResponse) Reset() {
	*x = RideStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusResponse) ProtoMessage() {}

func (x *RideStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusResponse.ProtoReflect.Descriptor instead.
func (*RideStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{2}
}

func (x *RideStatusResponse) GetStatus() RideStatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return RideStatusResponse_PENDING
}

func (x *RideStatusResponse) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *RideStatusResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type DriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *DriverRequest) Reset() {
	*x = DriverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRequest) ProtoMessage() {}

func (x *DriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRequest.ProtoReflect.Descriptor instead.
func (*DriverRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{3}
}

func (x *DriverRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type DriverRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId     string `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	Pickup      string `protobuf:"bytes,2,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Destination string `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *DriverRideRequest) Reset() {
	*x = DriverRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRideRequest) ProtoMessage() {}

func (x *DriverRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRideRequest.ProtoReflect.Descriptor instead.
func (*DriverRideRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{4}
}

func (x *DriverRideRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *DriverRideRequest) GetPickup() string {
	if x != nil {
		return x.Pickup
	}
	return ""
}

func (x *DriverRideRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type AcceptRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId  string `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	DriverId string `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *AcceptRideRequest) Reset() {
	*x = AcceptRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRideRequest) ProtoMessage() {}

func (x *AcceptRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRideRequest.ProtoReflect.Descriptor instead.
func (*AcceptRideRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptRideRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *AcceptRideRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type RejectRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId  string `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	DriverId string `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *RejectRideRequest) Reset() {
	*x = RejectRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectRideRequest) ProtoMessage() {}

func (x *RejectRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectRideRequest.ProtoReflect.Descriptor instead.
func (*RejectRideRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{6}
}

func (x *RejectRideRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *RejectRideRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type RideCompletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *RideCompletionRequest) Reset() {
	*x = RideCompletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideCompletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideCompletionRequest) ProtoMessage() {}

func (x *RideCompletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideCompletionRequest.ProtoReflect.Descriptor instead.
func (*RideCompletionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{7}
}

func (x *RideCompletionRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type RideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suess bool `protobuf:"varint,1,opt,name=suess,proto3" json:"suess,omitempty"`
}

func (x *RideResponse) Reset() {
	*x = RideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideResponse) ProtoMessage() {}

func (x *RideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideResponse.ProtoReflect.Descriptor instead.
func (*RideResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{8}
}

func (x *RideResponse) GetSuess() bool {
	if x != nil {
		return x.Suess
	}
	return false
}

type AcceptRideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AcceptRideResponse) Reset() {
	*x = AcceptRideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRideResponse) ProtoMessage() {}

func (x *AcceptRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRideResponse.ProtoReflect.Descriptor instead.
func (*AcceptRideResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{9}
}

func (x *AcceptRideResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RejectRideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RejectRideResponse) Reset() {
	*x = RejectRideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectRideResponse) ProtoMessage() {}

func (x *RejectRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectRideResponse.ProtoReflect.Descriptor instead.
func (*RejectRideResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{10}
}

func (x *RejectRideResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RideCompletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RideCompletionResponse) Reset() {
	*x = RideCompletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_rideshare_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideCompletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideCompletionResponse) ProtoMessage() {}

func (x *RideCompletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_rideshare_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideCompletionResponse.ProtoReflect.Descriptor instead.
func (*RideCompletionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_rideshare_proto_rawDescGZIP(), []int{11}
}

func (x *RideCompletionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_pkg_proto_rideshare_proto protoreflect.FileDescriptor

var file_pkg_proto_rideshare_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x69, 0x64, 0x65,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x79, 0x75,
	0x62, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x0b, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x11, 0x52, 0x69, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x52, 0x69, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x40, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x4f, 0x5f,
	0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x02, 0x22, 0x2c, 0x0a, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x68, 0x0a, 0x11, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x11, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x15, 0x52, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x0c, 0x52,
	0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x75, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x75, 0x65, 0x73,
	0x73, 0x22, 0x2e, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x2e, 0x0a, 0x12, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x32, 0x0a, 0x16, 0x52, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xb9, 0x03, 0x0a, 0x0b, 0x52, 0x69, 0x64, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x69, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x69,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x79, 0x75, 0x62,
	0x65, 0x72, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x69, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d,
	0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x45, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65,
	0x12, 0x19, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x79,
	0x75, 0x62, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65,
	0x12, 0x1d, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6d, 0x79, 0x75, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x10, 0x5a, 0x0e, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x72,
	0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_rideshare_proto_rawDescOnce sync.Once
	file_pkg_proto_rideshare_proto_rawDescData = file_pkg_proto_rideshare_proto_rawDesc
)

func file_pkg_proto_rideshare_proto_rawDescGZIP() []byte {
	file_pkg_proto_rideshare_proto_rawDescOnce.Do(func() {
		file_pkg_proto_rideshare_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_rideshare_proto_rawDescData)
	})
	return file_pkg_proto_rideshare_proto_rawDescData
}

var file_pkg_proto_rideshare_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_proto_rideshare_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_proto_rideshare_proto_goTypes = []any{
	(RideStatusResponse_Status)(0), // 0: myuber.RideStatusResponse.Status
	(*RideRequest)(nil),            // 1: myuber.RideRequest
	(*RideStatusRequest)(nil),      // 2: myuber.RideStatusRequest
	(*RideStatusResponse)(nil),     // 3: myuber.RideStatusResponse
	(*DriverRequest)(nil),          // 4: myuber.DriverRequest
	(*DriverRideRequest)(nil),      // 5: myuber.DriverRideRequest
	(*AcceptRideRequest)(nil),      // 6: myuber.AcceptRideRequest
	(*RejectRideRequest)(nil),      // 7: myuber.RejectRideRequest
	(*RideCompletionRequest)(nil),  // 8: myuber.RideCompletionRequest
	(*RideResponse)(nil),           // 9: myuber.RideResponse
	(*AcceptRideResponse)(nil),     // 10: myuber.AcceptRideResponse
	(*RejectRideResponse)(nil),     // 11: myuber.RejectRideResponse
	(*RideCompletionResponse)(nil), // 12: myuber.RideCompletionResponse
}
var file_pkg_proto_rideshare_proto_depIdxs = []int32{
	0,  // 0: myuber.RideStatusResponse.status:type_name -> myuber.RideStatusResponse.Status
	1,  // 1: myuber.RideService.RequestRide:input_type -> myuber.RideRequest
	2,  // 2: myuber.RideService.GetRideStatus:input_type -> myuber.RideStatusRequest
	4,  // 3: myuber.RideService.ConnectDriver:input_type -> myuber.DriverRequest
	6,  // 4: myuber.RideService.AcceptRide:input_type -> myuber.AcceptRideRequest
	7,  // 5: myuber.RideService.RejectRide:input_type -> myuber.RejectRideRequest
	8,  // 6: myuber.RideService.CompleteRide:input_type -> myuber.RideCompletionRequest
	9,  // 7: myuber.RideService.RequestRide:output_type -> myuber.RideResponse
	3,  // 8: myuber.RideService.GetRideStatus:output_type -> myuber.RideStatusResponse
	5,  // 9: myuber.RideService.ConnectDriver:output_type -> myuber.DriverRideRequest
	10, // 10: myuber.RideService.AcceptRide:output_type -> myuber.AcceptRideResponse
	11, // 11: myuber.RideService.RejectRide:output_type -> myuber.RejectRideResponse
	12, // 12: myuber.RideService.CompleteRide:output_type -> myuber.RideCompletionResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_proto_rideshare_proto_init() }
func file_pkg_proto_rideshare_proto_init() {
	if File_pkg_proto_rideshare_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_rideshare_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RideStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RideStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DriverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DriverRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RejectRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RideCompletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptRideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RejectRideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_rideshare_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RideCompletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_rideshare_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_rideshare_proto_goTypes,
		DependencyIndexes: file_pkg_proto_rideshare_proto_depIdxs,
		EnumInfos:         file_pkg_proto_rideshare_proto_enumTypes,
		MessageInfos:      file_pkg_proto_rideshare_proto_msgTypes,
	}.Build()
	File_pkg_proto_rideshare_proto = out.File
	file_pkg_proto_rideshare_proto_rawDesc = nil
	file_pkg_proto_rideshare_proto_goTypes = nil
	file_pkg_proto_rideshare_proto_depIdxs = nil
}
